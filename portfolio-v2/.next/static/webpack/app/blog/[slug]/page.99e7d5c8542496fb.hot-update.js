"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/blog/[slug]/page",{

/***/ "(app-pages-browser)/./lib/constants.ts":
/*!**************************!*\
  !*** ./lib/constants.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOG_POSTS: () => (/* binding */ BLOG_POSTS),\n/* harmony export */   NAV_LINKS: () => (/* binding */ NAV_LINKS),\n/* harmony export */   PROJECTS: () => (/* binding */ PROJECTS),\n/* harmony export */   skills: () => (/* binding */ skills),\n/* harmony export */   socialLinks: () => (/* binding */ socialLinks),\n/* harmony export */   technologies: () => (/* binding */ technologies)\n/* harmony export */ });\n// --- TIPOS ---\n// --- CONSTANTES EXPORTADAS ---\nconst NAV_LINKS = [\n    {\n        name: \"Sobre\",\n        href: \"#sobre\"\n    },\n    {\n        name: \"Projetos\",\n        href: \"#projetos\"\n    },\n    {\n        name: \"Contato\",\n        href: \"#contato\"\n    }\n];\nconst PROJECTS = [\n    {\n        title: \"Sentiment Analyzer API\",\n        slug: \"sentiment-analyzer-api\",\n        short: \"Python • IA • Análise de Dados\",\n        overview: \"Uma API de back-end que utiliza Processamento de Linguagem Natural para analisar o sentimento de textos.\",\n        description: \"Desenvolvimento de um serviço robusto em Python e Flask para análise de sentimento. Responsável pela criação da API RESTful, integração com a biblioteca NLTK para análise de texto e pela estruturação de uma resposta JSON clara e útil.\",\n        href: \"/projetos/sentiment-analyzer-api\",\n        challenge: \"Empresas de e-commerce recebem milhares de reviews, tornando inviável a análise manual para entender a percepção do cliente sobre um produto. O desafio era criar um sistema automatizado para processar esses textos e extrair insights valiosos em tempo real.\",\n        solution: \"Desenvolvi uma API RESTful com Python e Flask. O serviço recebe um texto, o pré-processa (removendo ruídos e normalizando) e utiliza a biblioteca NLTK com um classificador pré-treinado para determinar o sentimento (positivo, negativo, neutro). A resposta é retornada em um JSON estruturado, pronto para ser consumido por qualquer front-end.\",\n        learnings: [\n            \"Implementação de pipelines de pré-processamento de texto para NLP.\",\n            \"Criação e deployment de uma API Python leve e performática com Flask.\",\n            \"Compreensão das nuances e limitações de modelos de análise de sentimento.\"\n        ],\n        techStack: [\n            \"Python\",\n            \"Flask\",\n            \"NLTK\",\n            \"Docker\"\n        ],\n        image: \"/images/projeto-ia.jpg\"\n    },\n    {\n        title: \"Inventory Control API\",\n        slug: \"inventory-control-api\",\n        short: \"Java • Spring Boot • PostgreSQL\",\n        overview: \"Uma API RESTful robusta para gerenciamento de estoque, focada em segurança, transações e integridade dos dados.\",\n        description: \"Criação de um sistema de controle de estoque utilizando Java e Spring Boot...\",\n        href: \"/projetos/inventory-control-api\",\n        challenge: \"Pequenos negócios precisam de um controle de estoque preciso para evitar perdas financeiras. O desafio era criar um back-end que garantisse a consistência e a atomicidade das transações de estoque.\",\n        solution: \"Utilizando Java e Spring Boot, construí uma API segura com autenticação JWT. A arquitetura foi focada em transações ACID com um banco de dados PostgreSQL, garantindo que operações de entrada e saída de estoque fossem atômicas. A modelagem de dados foi cuidadosamente planejada para suportar futuras funcionalidades.\",\n        learnings: [\n            \"Modelagem de dados relacional complexa com JPA/Hibernate.\",\n            \"Implementação de segurança baseada em tokens com Spring Security.\",\n            \"A importância de transações de banco de dados para a lógica de negócio.\"\n        ],\n        techStack: [\n            \"Java\",\n            \"Spring Boot\",\n            \"PostgreSQL\",\n            \"JPA/Hibernate\",\n            \"Maven\"\n        ],\n        image: \"/images/projeto-estoque.jpg\"\n    },\n    {\n        title: \"Real-time Log Processor\",\n        slug: \"real-time-log-processor\",\n        short: \"Scala • Akka • Processamento de Dados\",\n        overview: \"Um serviço de alta performance para processar fluxos contínuos de logs de aplicações em tempo real.\",\n        description: \"Implementação de um sistema de processamento de dados com Scala e Akka Streams...\",\n        href: \"/projetos/real-time-log-processor\",\n        challenge: \"Aplicações modernas geram um volume massivo de logs. Analisar esses dados em tempo real é um grande desafio de engenharia de dados.\",\n        solution: \"Construí um serviço com Scala e Akka Streams que simula o consumo de um fluxo de logs...\",\n        learnings: [\n            \"Programação reativa e processamento de streams com Akka.\",\n            \"Conceitos de concorrência e paralelismo em Scala.\",\n            \"Design de sistemas para processamento de dados em tempo real.\"\n        ],\n        techStack: [\n            \"Scala\",\n            \"Akka Streams\",\n            \"SBT\",\n            \"Docker\"\n        ],\n        image: \"/images/projeto-logs.jpg\"\n    },\n    {\n        title: \"Dev Insights Dashboard\",\n        slug: \"dev-insights-dashboard\",\n        short: \"Next.js • TypeScript • Integração\",\n        overview: \"O painel de controle que unifica e demonstra o poder das outras três APIs, provando a capacidade full-stack.\",\n        description: \"Desenvolvimento de uma interface rica e interativa com Next.js...\",\n        href: \"/projetos/dev-insights-dashboard\",\n        challenge: \"Provar a funcionalidade de múltiplas APIs de back-end de forma isolada é ineficiente...\",\n        solution: \"Desenvolvi um dashboard completo com Next.js e TypeScript. A aplicação se conecta às APIs...\",\n        learnings: [\n            \"Consumo de múltiplas APIs heterogêneas em um único front-end.\",\n            \"Gerenciamento de estado complexo em aplicações React.\",\n            \"Criação de visualizações de dados interativas com bibliotecas de gráficos.\"\n        ],\n        techStack: [\n            \"Next.js\",\n            \"React\",\n            \"TypeScript\",\n            \"Tailwind CSS\",\n            \"Framer Motion\"\n        ],\n        image: \"/images/projeto-dashboard.jpg\"\n    }\n];\nconst BLOG_POSTS = [];\nconst technologies = [];\nconst skills = [];\nconst socialLinks = [];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/constants.ts\n"));

/***/ })

});