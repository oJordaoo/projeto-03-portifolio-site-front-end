"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/blog/[slug]/page",{

/***/ "(app-pages-browser)/./lib/constants.ts":
/*!**************************!*\
  !*** ./lib/constants.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOG_POSTS: () => (/* binding */ BLOG_POSTS),\n/* harmony export */   NAV_LINKS: () => (/* binding */ NAV_LINKS),\n/* harmony export */   PROJECTS: () => (/* binding */ PROJECTS),\n/* harmony export */   skills: () => (/* binding */ skills),\n/* harmony export */   socialLinks: () => (/* binding */ socialLinks),\n/* harmony export */   technologies: () => (/* binding */ technologies)\n/* harmony export */ });\n// --- TIPOS ---\n// --- CONSTANTES EXPORTADAS ---\nconst NAV_LINKS = [\n    {\n        name: \"Sobre\",\n        href: \"#sobre\"\n    },\n    {\n        name: \"Projetos\",\n        href: \"#projetos\"\n    },\n    {\n        name: \"Contato\",\n        href: \"#contato\"\n    }\n];\n// PROJETOS (COM O PROJETO DE IA DE VOLTA)\nconst PROJECTS = [\n    {\n        title: \"Sentiment Analyzer API\",\n        slug: \"sentiment-analyzer-api\",\n        short: \"Python • IA • Análise de Dados\",\n        overview: \"Uma API de back-end que utiliza Processamento de Linguagem Natural para analisar o sentimento de textos.\",\n        description: \"Desenvolvimento de um serviço robusto em Python e Flask para análise de sentimento. Responsável pela criação da API RESTful, integração com a biblioteca NLTK para análise de texto e pela estruturação de uma resposta JSON clara e útil.\",\n        href: \"/projetos/sentiment-analyzer-api\",\n        challenge: \"Empresas de e-commerce recebem milhares de reviews, tornando inviável a análise manual para entender a percepção do cliente sobre um produto. O desafio era criar um sistema automatizado para processar esses textos e extrair insights valiosos em tempo real.\",\n        solution: \"Desenvolvi uma API RESTful com Python e Flask. O serviço recebe um texto, o pré-processa (removendo ruídos e normalizando) e utiliza a biblioteca NLTK com um classificador pré-treinado para determinar o sentimento (positivo, negativo, neutro). A resposta é retornada em um JSON estruturado, pronto para ser consumido por qualquer front-end.\",\n        learnings: [\n            \"Implementação de pipelines de pré-processamento de texto para NLP.\",\n            \"Criação e deployment de uma API Python leve e performática com Flask.\",\n            \"Compreensão das nuances e limitações de modelos de análise de sentimento.\"\n        ],\n        techStack: [\n            \"Python\",\n            \"Flask\",\n            \"NLTK\",\n            \"Docker\"\n        ]\n    },\n    {\n        title: \"Inventory Control API\",\n        slug: \"inventory-control-api\",\n        short: \"Java • Spring Boot • PostgreSQL\",\n        overview: \"Uma API RESTful robusta para gerenciamento de estoque, focada em segurança, transações e integridade dos dados.\",\n        description: \"Criação de um sistema de controle de estoque utilizando Java e Spring Boot...\",\n        href: \"/projetos/inventory-control-api\",\n        challenge: \"Pequenos negócios precisam de um controle de estoque preciso para evitar perdas financeiras. O desafio era criar um back-end que garantisse a consistência e a atomicidade das transações de estoque.\",\n        solution: \"Utilizando Java e Spring Boot, construí uma API segura com autenticação JWT. A arquitetura foi focada em transações ACID com um banco de dados PostgreSQL, garantindo que operações de entrada e saída de estoque fossem atômicas. A modelagem de dados foi cuidadosamente planejada para suportar futuras funcionalidades.\",\n        learnings: [\n            \"Modelagem de dados relacional complexa com JPA/Hibernate.\",\n            \"Implementação de segurança baseada em tokens com Spring Security.\",\n            \"A importância de transações de banco de dados para a lógica de negócio.\"\n        ],\n        techStack: [\n            \"Java\",\n            \"Spring Boot\",\n            \"PostgreSQL\",\n            \"JPA/Hibernate\",\n            \"Maven\"\n        ]\n    },\n    {\n        title: \"Real-time Log Processor\",\n        slug: \"real-time-log-processor\",\n        short: \"Scala • Akka • Processamento de Dados\",\n        overview: \"Um serviço de alta performance para processar fluxos contínuos de logs de aplicações em tempo real.\",\n        description: \"Implementação de um sistema de processamento de dados com Scala e Akka Streams...\",\n        href: \"/projetos/real-time-log-processor\",\n        challenge: \"Aplicações modernas geram um volume massivo de logs. Analisar esses dados em tempo real é um grande desafio de engenharia de dados.\",\n        solution: \"Construí um serviço com Scala e Akka Streams que simula o consumo de um fluxo de logs...\",\n        learnings: [\n            \"Programação reativa e processamento de streams com Akka.\",\n            \"Conceitos de concorrência e paralelismo em Scala.\",\n            \"Design de sistemas para processamento de dados em tempo real.\"\n        ],\n        techStack: [\n            \"Scala\",\n            \"Akka Streams\",\n            \"SBT\",\n            \"Docker\"\n        ]\n    },\n    {\n        title: \"Dev Insights Dashboard\",\n        slug: \"dev-insights-dashboard\",\n        short: \"Next.js • TypeScript • Integração\",\n        overview: \"O painel de controle que unifica e demonstra o poder das outras três APIs, provando a capacidade full-stack.\",\n        description: \"Desenvolvimento de uma interface rica e interativa com Next.js...\",\n        href: \"/projetos/dev-insights-dashboard\",\n        challenge: \"Provar a funcionalidade de múltiplas APIs de back-end de forma isolada é ineficiente...\",\n        solution: \"Desenvolvi um dashboard completo com Next.js e TypeScript. A aplicação se conecta às APIs...\",\n        learnings: [\n            \"Consumo de múltiplas APIs heterogêneas em um único front-end.\",\n            \"Gerenciamento de estado complexo em aplicações React.\",\n            \"Criação de visualizações de dados interativas com bibliotecas de gráficos.\"\n        ],\n        techStack: [\n            \"Next.js\",\n            \"React\",\n            \"TypeScript\",\n            \"Tailwind CSS\",\n            \"Framer Motion\"\n        ]\n    }\n];\n// ARTIGOS DE BLOG REESCRITOS COM RIGOR TÉCNICO\nconst BLOG_POSTS = [\n    {\n        title: \"Da Linha de Montagem à Linha de Código: Uma Análise Comparativa entre Automação Industrial e Arquitetura de Software\",\n        slug: \"da-fabrica-ao-codigo\",\n        excerpt: \"Uma tese sobre como os princípios de Manufatura Enxuta, Tolerância a Falhas e a relação Homem-Máquina na indústria se traduzem diretamente em design patterns de software robusto e escalável.\",\n        tags: [\n            \"Arquitetura\",\n            \"Engenharia\",\n            \"UX\"\n        ],\n        content: \"\\n      <p>A percep\\xe7\\xe3o comum enxerga a transi\\xe7\\xe3o da engenharia mec\\xe2nica para o desenvolvimento de software como uma mudan\\xe7a de paradigma. Na realidade, \\xe9 uma mudan\\xe7a de meio. Os princ\\xedpios fundamentais que governam a efici\\xeancia, a resili\\xeancia e a intera\\xe7\\xe3o em um sistema de manufatura s\\xe3o an\\xe1logos, e por vezes id\\xeanticos, aos que definem uma arquitetura de software de alta qualidade. Minha experi\\xeancia operando uma coladeira de bordos industrial foi menos sobre m\\xf3veis e mais sobre a interface cr\\xedtica entre l\\xf3gica, m\\xe1quina e operador – uma li\\xe7\\xe3o que hoje aplico em cada servi\\xe7o e API que construo.</p>\\n      \\n      <h3 class=\\\"text-2xl font-bold mt-8 mb-4 text-brand-white\\\">1. O Princ\\xedpio da Calibra\\xe7\\xe3o: O D\\xe9bito T\\xe9cnico como Desgaste de Ferramental</h3>\\n      <p>Uma m\\xe1quina industrial de precis\\xe3o, desalinhada em 0.5mm, n\\xe3o produz pe\\xe7as 'quase boas'; ela produz sucata, resultando em perda de material, tempo e capital. Esse desalinhamento \\xe9 o an\\xe1logo perfeito do d\\xe9bito t\\xe9cnico. Um atalho em uma modelagem de dados ou a escolha de um algoritmo O(n\\xb2) onde um O(log n) \\xe9 vi\\xe1vel pode parecer uma economia de tempo trivial. No entanto, sob carga, essa 'falta de calibra\\xe7\\xe3o' resulta em lat\\xeancia, falhas em cascata e custos de infraestrutura exponenciais. A li\\xe7\\xe3o da f\\xe1brica \\xe9 clara: a manuten\\xe7\\xe3o preventiva e a 'calibra\\xe7\\xe3o' constante do c\\xf3digo – atrav\\xe9s de refatora\\xe7\\xe3o, testes e otimiza\\xe7\\xe3o – n\\xe3o s\\xe3o luxos, s\\xe3o o processo central para evitar a fal\\xeancia sist\\xeamica. A 'qualidade' n\\xe3o \\xe9 uma feature; \\xe9 a preven\\xe7\\xe3o de custos futuros.</p>\\n      \\n      <h3 class=\\\"text-2xl font-bold mt-8 mb-4 text-brand-white\\\">2. A Interface como 'Poka-Yoke': Projetando Sistemas \\xe0 Prova de Erros</h3>\\n      <p>No sistema Toyota de Produ\\xe7\\xe3o, 'Poka-Yoke' \\xe9 o princ\\xedpio de projetar processos que previnem a ocorr\\xeancia de erros. Uma pe\\xe7a que s\\xf3 encaixa da maneira correta \\xe9 um exemplo. O software da m\\xe1quina que operei carecia disso; sua interface complexa permitia a inser\\xe7\\xe3o de par\\xe2metros inv\\xe1lidos, levando diretamente a erros de produ\\xe7\\xe3o. Uma boa API, assim como um bom design de interface, deve ser um Poka-Yoke. Ela deve validar rigorosamente os inputs, fornecer mensagens de erro claras e ter um 'contrato' bem definido que torna dif\\xedcil para o consumidor (seja um front-end ou outro servi\\xe7o) utiliz\\xe1-la de forma incorreta. Uma boa UX n\\xe3o \\xe9 sobre deixar o sistema 'bonito'; \\xe9 sobre reduzir a carga cognitiva do operador e a probabilidade de erro humano, o que se traduz diretamente em efici\\xeancia e qualidade.</p>\\n    \"\n    },\n    {\n        title: \"A Saturação do Mercado Dev de Entrada: Uma Análise Estratificada da Competição Real\",\n        slug: \"o-paradoxo-do-primeiro-emprego\",\n        excerpt: \"Uma análise baseada no princípio de Pareto sobre por que a vasta maioria dos candidatos a vagas de júnior compete em um oceano vermelho de projetos genéricos, e como se posicionar no 1% que disputa as melhores oportunidades.\",\n        tags: [\n            \"Carreira\",\n            \"Mercado\",\n            \"Estratégia\"\n        ],\n        content: \"\\n      <p>A percep\\xe7\\xe3o de um mercado de tecnologia de entrada 'saturado' \\xe9 matematicamente correta, mas funcionalmente enganosa. A competi\\xe7\\xe3o n\\xe3o \\xe9 um bloco monol\\xedtico; ela \\xe9 estratificada. A vasta maioria dos candidatos, embora tecnicamente em busca da mesma vaga, n\\xe3o compete de fato com o grupo de elite que recebe as ofertas. Baseado no princ\\xedpio de Pareto (a regra 80/20) e em observa\\xe7\\xf5es da ind\\xfastria, podemos estratificar a competi\\xe7\\xe3o em uma pir\\xe2mide 90-9-1.</p>\\n      \\n      <h3 class=\\\"text-2xl font-bold mt-8 mb-4 text-brand-white\\\">Os 90%: A Base da Pir\\xe2mide – A Competi\\xe7\\xe3o por Conclus\\xe3o de Curso</h3>\\n      <p>Este estrato representa os candidatos cujo principal diferencial \\xe9 a conclus\\xe3o de um curso ou bootcamp. Seus portf\\xf3lios, quando existentes, s\\xe3o compostos quase que exclusivamente por projetos-tutorial (calculadoras, clones de UI, to-do lists). O c\\xf3digo existe e funciona, mas n\\xe3o demonstra autonomia ou a capacidade de resolver um problema n\\xe3o estruturado. Eles validaram a habilidade de seguir instru\\xe7\\xf5es. O mercado para este grupo \\xe9 um oceano vermelho de alta competi\\xe7\\xe3o por vagas que exigem pouca ou nenhuma tomada de decis\\xe3o t\\xe9cnica.</p>\\n\\n      <h3 class=\\\"text-2xl font-bold mt-8 mb-4 text-brand-white\\\">Os 9%: O Meio da Pir\\xe2mide – A Competi\\xe7\\xe3o por Complexidade T\\xe9cnica</h3>\\n      <p>Aqui, os desenvolvedores j\\xe1 transcenderam os tutoriais. Eles constroem projetos full-stack funcionais, como um e-commerce com carrinho de compras ou um clone de rede social com autentica\\xe7\\xe3o. Eles demonstram profici\\xeancia t\\xe9cnica. A competi\\xe7\\xe3o aqui \\xe9 acirrada e qualificada. No entanto, a falha comum deste grupo \\xe9 a falta de um problema real. Os projetos s\\xe3o impressionantes como exerc\\xedcios t\\xe9cnicos, mas raramente resolvem uma dor de mercado espec\\xedfica. Eles respondem 'o que' e 'como' constru\\xedram, mas trope\\xe7am no 'porqu\\xea'.</p>\\n\\n      <h3 class=\\\"text-2xl font-bold mt-8 mb-4 text-brand-white\\\">O 1%: O Topo da Pir\\xe2mide – A Competi\\xe7\\xe3o por Valor de Neg\\xf3cio</h3>\\n      <p>Este \\xe9 o grupo que efetivamente disputa as melhores vagas de j\\xfanior. A diferen\\xe7a fundamental \\xe9 a mentalidade: eles n\\xe3o constroem 'projetos', eles constroem 'produtos' e 'solu\\xe7\\xf5es'. Eles identificam uma inefici\\xeancia real — no trabalho de um amigo, em um hobby, em uma comunidade local — e aplicam suas habilidades para criar uma ferramenta que gera valor. Seu portf\\xf3lio n\\xe3o \\xe9 uma lista de tecnologias, \\xe9 uma s\\xe9rie de estudos de caso. Em vez de dizer \\\"Fiz uma API com Java\\\", eles dizem \\\"Reduzi o risco de inconsist\\xeancia de dados em pequenos estoques atrav\\xe9s de uma API transacional com Java e PostgreSQL\\\". A conversa com o recrutador deixa de ser sobre sintaxe e passa a ser sobre impacto no neg\\xf3cio. \\xc9 neste estrato que a 'satura\\xe7\\xe3o' se torna irrelevante, pois a competi\\xe7\\xe3o \\xe9 por racioc\\xednio e resultados, n\\xe3o por certificados.</p>\\n    \"\n    },\n    {\n        title: \"IA como Ferramenta de Alavancagem, Não de Substituição: Uma Tese sobre o Futuro da Engenharia de Software\",\n        slug: \"ia-e-o-futuro-do-desenvolvimento\",\n        excerpt: \"Uma análise aprofundada de como modelos de IA generativa estão redefinindo as camadas de abstração no desenvolvimento, e por que a engenharia de prompts e a validação de sistemas se tornarão as habilidades centrais do desenvolvedor moderno.\",\n        tags: [\n            \"IA\",\n            \"Arquitetura\",\n            \"Futuro\"\n        ],\n        content: '\\n      <p>O debate atual sobre IA no desenvolvimento de software est\\xe1, em grande parte, focado em uma premissa equivocada: a substitui\\xe7\\xe3o de tarefas. A verdadeira revolu\\xe7\\xe3o n\\xe3o est\\xe1 na automa\\xe7\\xe3o da escrita de c\\xf3digo, mas na ascens\\xe3o de uma nova camada de abstra\\xe7\\xe3o. Assim como o compilador nos abstraiu da linguagem de m\\xe1quina e os frameworks nos abstra\\xedram da manipula\\xe7\\xe3o direta do DOM, os Modelos de Linguagem Grandes (LLMs) est\\xe3o nos abstraindo da implementa\\xe7\\xe3o de l\\xf3gica de baixo n\\xedvel. O desenvolvedor n\\xe3o est\\xe1 se tornando obsoleto; est\\xe1 sendo promovido.</p>\\n      \\n      <h3 class=\"text-2xl font-bold mt-8 mb-4 text-brand-white\">De Implementador a Arquiteto e Validador de Sistemas</h3>\\n      <p>Historicamente, o valor de um desenvolvedor estava em sua capacidade de traduzir um requisito de neg\\xf3cio em c\\xf3digo funcional. Hoje, um LLM pode realizar uma por\\xe7\\xe3o significativa dessa tradu\\xe7\\xe3o. Onde, ent\\xe3o, reside o novo valor? Em tr\\xeas \\xe1reas cr\\xedticas: <strong>1. Formula\\xe7\\xe3o do Problema (Engenharia de Prompts):</strong> A habilidade de decompor um problema de neg\\xf3cio complexo em uma s\\xe9rie de prompts precisos e contextuais para a IA. Isso exige um entendimento profundo tanto do dom\\xednio do neg\\xf3cio quanto da arquitetura de software. <strong>2. Integra\\xe7\\xe3o e Orquestra\\xe7\\xe3o:</strong> O c\\xf3digo gerado pela IA \\xe9 uma pe\\xe7a em um quebra-cabe\\xe7a. O papel do desenvolvedor \\xe9 atuar como o arquiteto que integra essa pe\\xe7a a sistemas existentes, bancos de dados, e outras APIs, garantindo a coes\\xe3o do todo. <strong>3. Valida\\xe7\\xe3o e Seguran\\xe7a:</strong> A IA pode gerar c\\xf3digo que \\xe9 funcionalmente correto, mas ing\\xeanuo em termos de seguran\\xe7a, escalabilidade ou casos de borda. O desenvolvedor moderno \\xe9 o validador final, respons\\xe1vel por aplicar testes rigorosos, realizar auditorias de seguran\\xe7a e garantir que a solu\\xe7\\xe3o n\\xe3o apenas funcione, mas seja robusta e confi\\xe1vel em produ\\xe7\\xe3o.</p>\\n\\n      <h3 class=\"text-2xl font-bold mt-8 mb-4 text-brand-white\">Conclus\\xe3o: A Curiosidade como Vantagem Competitiva</h3>\\n      <p>A ascens\\xe3o da IA n\\xe3o diminui a necessidade de desenvolvedores; ela eleva a barra. O mercado n\\xe3o precisar\\xe1 de menos programadores, mas sim de mais engenheiros de software – profissionais capazes de pensar sistemicamente, validar arquiteturas complexas e, acima de tudo, usar a curiosidade para fazer as perguntas certas. A IA \\xe9 a mais poderosa ferramenta de alavancagem que j\\xe1 tivemos. O desafio n\\xe3o \\xe9 competir com ela, mas aprender a us\\xe1-la para construir sistemas em uma escala e complexidade que antes eram inimagin\\xe1veis.</p>\\n    '\n    }\n];\nconst technologies = [];\nconst skills = [];\nconst socialLinks = [];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/constants.ts\n"));

/***/ })

});